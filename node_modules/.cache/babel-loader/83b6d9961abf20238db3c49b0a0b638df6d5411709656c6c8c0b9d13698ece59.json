{"ast":null,"code":"var _jsxFileName = \"/home/ana/Escritorio/repo/ReactPro/memory-game/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { MemoryCards } from \"./components/Card/MemoryCards\";\nimport imageGame1 from \"./assets/planet-game1.png\";\nimport imageGame2 from \"./assets/planet-game2.png\";\nimport imageGame3 from \"./assets/planet-game3.png\";\nimport imageGame4 from \"./assets/planet-game4.png\";\nimport imageGame5 from \"./assets/planet-game5.png\";\nimport imageGame6 from \"./assets/planet-game6.png\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [{\n  \"src\": imageGame1\n}, {\n  \"src\": imageGame2\n}, {\n  \"src\": imageGame3\n}, {\n  \"src\": imageGame4\n}, {\n  \"src\": imageGame5\n}, {\n  \"src\": imageGame6\n}];\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState();\n  const [choiceTwo, setChoiceTwo] = useState();\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages].sort(() => Math.random() - 0.5).map(card => ({\n      ...card,\n      id: Math.random()\n    }));\n    setCards(shuffledCards);\n    setTurns(0);\n  };\n  console.log(cards, turns);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Magic Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MemoryCards, {\n      cards: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YpUrfi3YWJCbH1HKPnRDx1WiaTU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","MemoryCards","imageGame1","imageGame2","imageGame3","imageGame4","imageGame5","imageGame6","jsxDEV","_jsxDEV","cardImages","App","_s","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","shuffleCards","shuffledCards","sort","Math","random","map","card","id","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/ana/Escritorio/repo/ReactPro/memory-game/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { MemoryCards } from \"./components/Card/MemoryCards\";\nimport imageGame1 from \"./assets/planet-game1.png\";\nimport imageGame2 from \"./assets/planet-game2.png\";\nimport imageGame3 from \"./assets/planet-game3.png\";\nimport imageGame4 from \"./assets/planet-game4.png\";\nimport imageGame5 from \"./assets/planet-game5.png\";\nimport imageGame6 from \"./assets/planet-game6.png\";\n\nimport './App.css';\n\n\nconst cardImages = [\n  {\"src\": imageGame1},\n  {\"src\": imageGame2},\n  {\"src\": imageGame3},\n  {\"src\": imageGame4},\n  {\"src\": imageGame5},\n  {\"src\": imageGame6}\n]\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState();\n  const [choiceTwo, setChoiceTwo] = useState();\n\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n    .sort(() => Math.random() - 0.5)\n    .map((card) => ({ ...card, id: Math.random() }))\n\n    setCards(shuffledCards);\n    setTurns(0);\n  }\n\n  console.log(cards, turns);\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>New Game</button>\n      <MemoryCards cards={cards}/>\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,+BAA+B;AAC3D,OAAOC,UAAU,MAAM,2BAA2B;AAClD,OAAOC,UAAU,MAAM,2BAA2B;AAClD,OAAOC,UAAU,MAAM,2BAA2B;AAClD,OAAOC,UAAU,MAAM,2BAA2B;AAClD,OAAOC,UAAU,MAAM,2BAA2B;AAClD,OAAOC,UAAU,MAAM,2BAA2B;AAElD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnB,MAAMC,UAAU,GAAG,CACjB;EAAC,KAAK,EAAER;AAAU,CAAC,EACnB;EAAC,KAAK,EAAEC;AAAU,CAAC,EACnB;EAAC,KAAK,EAAEC;AAAU,CAAC,EACnB;EAAC,KAAK,EAAEC;AAAU,CAAC,EACnB;EAAC,KAAK,EAAEC;AAAU,CAAC,EACnB;EAAC,KAAK,EAAEC;AAAU,CAAC,CACpB;AAED,SAASI,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,CAAC;EAC5C,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,CAAC;EAE5C,MAAMqB,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,aAAa,GAAG,CAAC,GAAGZ,UAAU,EAAE,GAAGA,UAAU,CAAC,CACnDa,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAC/BC,GAAG,CAAEC,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAEC,EAAE,EAAEJ,IAAI,CAACC,MAAM,CAAC;IAAE,CAAC,CAAC,CAAC;IAEhDX,QAAQ,CAACQ,aAAa,CAAC;IACvBN,QAAQ,CAAC,CAAC,CAAC;EACb,CAAC;EAEDa,OAAO,CAACC,GAAG,CAACjB,KAAK,EAAEE,KAAK,CAAC;EACzB,oBACEN,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBvB,OAAA;MAAAuB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB3B,OAAA;MAAQ4B,OAAO,EAAEhB,YAAa;MAAAW,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChD3B,OAAA,CAACR,WAAW;MAACY,KAAK,EAAEA;IAAM;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEzB,CAAC;AAEV;AAACxB,EAAA,CAxBQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}