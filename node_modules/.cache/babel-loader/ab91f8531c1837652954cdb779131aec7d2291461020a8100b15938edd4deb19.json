{"ast":null,"code":"var _jsxFileName = \"/home/ana/Escritorio/repo/ReactPro/memory-game/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { MemoryCards } from \"./components/Card/MemoryCards\";\nimport imageGame1 from \"./assets/planet-game1.png\";\nimport imageGame2 from \"./assets/planet-game2.png\";\nimport imageGame3 from \"./assets/planet-game3.png\";\nimport imageGame4 from \"./assets/planet-game4.png\";\nimport imageGame5 from \"./assets/planet-game5.png\";\nimport imageGame6 from \"./assets/planet-game6.png\";\nimport './App.css';\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [{\n  \"src\": imageGame1,\n  matched: false\n}, {\n  \"src\": imageGame2,\n  matched: false\n}, {\n  \"src\": imageGame3,\n  matched: false\n}, {\n  \"src\": imageGame4,\n  matched: false\n}, {\n  \"src\": imageGame5,\n  matched: false\n}, {\n  \"src\": imageGame6,\n  matched: false\n}];\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages].sort(() => Math.random() - 0.5).map(card => ({\n      ...card,\n      id: Math.random()\n    }));\n    setCards(shuffledCards);\n    setTurns(0);\n  };\n  const handleChoice = card => {\n    !choiceOne ? setChoiceOne(card) : setChoiceTwo(card);\n  };\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurns => prevTurns + 1);\n  };\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true);\n      if (choiceOne.src === choiceTwo.src) {\n        choiceOne.matched = true;\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return {\n                ...card,\n                matched: true\n              };\n            }\n            return card;\n          });\n        });\n        resetTurn();\n      } else {\n        setTimeout(() => resetTurn(), 1000);\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Magic Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => {\n        return /*#__PURE__*/_jsxDEV(MemoryCards, {\n          card: card,\n          handleChoice: handleChoice,\n          flipped: card === choiceOne || card === choiceTwo || card.matched\n        }, card.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WWe0fUXumRKyACXDD8rBflBzdbo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","MemoryCards","imageGame1","imageGame2","imageGame3","imageGame4","imageGame5","imageGame6","useEffect","jsxDEV","_jsxDEV","cardImages","matched","App","_s","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","disabled","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","card","id","handleChoice","resetTurn","prevTurns","src","prevCards","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","flipped","_c","$RefreshReg$"],"sources":["/home/ana/Escritorio/repo/ReactPro/memory-game/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { MemoryCards } from \"./components/Card/MemoryCards\";\nimport imageGame1 from \"./assets/planet-game1.png\";\nimport imageGame2 from \"./assets/planet-game2.png\";\nimport imageGame3 from \"./assets/planet-game3.png\";\nimport imageGame4 from \"./assets/planet-game4.png\";\nimport imageGame5 from \"./assets/planet-game5.png\";\nimport imageGame6 from \"./assets/planet-game6.png\";\n\nimport './App.css';\nimport { useEffect } from \"react\";\n\n\nconst cardImages = [\n  {\"src\": imageGame1, matched: false},\n  {\"src\": imageGame2, matched: false},\n  {\"src\": imageGame3, matched: false},\n  {\"src\": imageGame4, matched: false},\n  {\"src\": imageGame5, matched: false},\n  {\"src\": imageGame6, matched: false}\n]\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n    .sort(() => Math.random() - 0.5)\n    .map((card) => ({ ...card, id: Math.random() }))\n\n    setCards(shuffledCards);\n    setTurns(0);\n  }\n\n  const handleChoice = (card) => {\n    !choiceOne ? setChoiceOne(card) : setChoiceTwo(card);\n  }\n\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns((prevTurns) => prevTurns + 1);\n  };\n\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true)\n      if (choiceOne.src === choiceTwo.src) {\n        choiceOne.matched = true\n        setCards((prevCards) => {\n          return prevCards.map((card) => {\n            if (card.src === choiceOne.src) {\n              return { ...card, matched: true}\n            }\n            return card\n          })\n        })\n        resetTurn();\n      } else {\n        setTimeout(() => resetTurn(), 1000);\n      }\n    }\n  }, [choiceOne, choiceTwo])\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>New Game</button>\n      <div className='card-grid'>\n      {\n        cards.map((card) => {\n          return (\n            <MemoryCards\n              key={card.id}\n              card={card}\n              handleChoice={handleChoice}\n              flipped={card === choiceOne || card === choiceTwo || card.matched}\n            />\n        )})\n      }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}